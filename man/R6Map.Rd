% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/R6Map.R
\name{R6Map}
\alias{R6Map}
\title{R6 class to display Earth Engine (EE) spatial objects}
\value{
Object of class leaflet, with the following extra parameters: tokens, name,
opacity, shown, min, max, palette, and legend. Use the $ method to retrieve
the data (e.g. m$rgee$min).
}
\description{
Create interactive visualizations of spatial EE objects
(ee$Geometry, ee$Image, ee$Feature, and ee$FeatureCollection)
using \code{leaflet}.
}
\details{
\code{Map} use the Earth Engine method
\href{https://developers.google.com/earth-engine/api_docs#ee.data.getmapid/}{
getMapId} to fetch and return an ID dictionary being used to create
layers in a \code{leaflet} object. Users can specify visualization
parameters to Map$addLayer by using the visParams argument. Each Earth
Engine spatial object has a specific format. For
\code{ee$Image}, the
\href{https://developers.google.com/earth-engine/guides/image_visualization}{
parameters} available are:

\tabular{lll}{
\strong{Parameter}\tab \strong{Description}  \tab \strong{Type}\cr
\strong{bands}    \tab  Comma-delimited list of three band names to be
mapped to RGB     \tab  list \cr
\strong{min}      \tab  Value(s) to map to 0 \tab  number or list of three
numbers, one for each band \cr
\strong{max}      \tab  Value(s) to map to 1 \tab  number or list of three
numbers, one for each band \cr
\strong{gain}     \tab  Value(s) by which to multiply each pixel value \tab
number or list of three numbers, one for each band \cr
\strong{bias}     \tab  Value(s) to add to each Digital Number (DN)
value \tab number or list of three numbers, one for each band \cr
\strong{gamma}    \tab  Gamma correction factor(s) \tab  number or list of
three numbers, one for each band \cr
\strong{palette}  \tab  List of CSS-style color strings
(single-band images only) \tab  comma-separated list of hex strings \cr
\strong{opacity}   \tab  The opacity of the layer (0.0 is fully transparent
and 1.0 is fully opaque) \tab  number \cr
}

If you add an \code{ee$Image} to Map$addLayer without any additional
parameters, by default it assigns the first three bands to red,
green, and blue bands, respectively. The default stretch is based on the
min-max range. On the other hand, the available parameters for
\code{ee$Geometry}, \code{ee$Feature}, and \code{ee$FeatureCollection}
are:

\itemize{
\item \strong{color}: A hex string in the format RRGGBB specifying the
color to use for drawing the features. By default #000000.
\item \strong{pointRadius}: The radius of the point markers. By default 3.
\item \strong{strokeWidth}: The width of lines and polygon borders. By
default 3.
}
}
\examples{

## ------------------------------------------------
## Method `R6Map$print`
## ------------------------------------------------

library(rgee)
Map

## ------------------------------------------------
## Method `R6Map$setCenter`
## ------------------------------------------------

library(rgee)
Map$setCenter(lon = -76, lat = 0, zoom = 6)
Map

## ------------------------------------------------
## Method `R6Map$setZoom`
## ------------------------------------------------

library(rgee)
Map$setZoom(zoom = 3)
Map

## ------------------------------------------------
## Method `R6Map$centerObject`
## ------------------------------------------------

\dontrun{
library(rgee)
ee_Initialize()
image <- ee$Image("LANDSAT/LC08/C01/T1/LC08_044034_20140318")
Map$centerObject(image)
}

## ------------------------------------------------
## Method `R6Map$addLayer`
## ------------------------------------------------

\dontrun{
library(rgee)
ee_Initialize()
image <- ee$Image("LANDSAT/LC08/C01/T1/LC08_044034_20140318")
Map$centerObject(image)
Map$addLayer(image)
}

## ------------------------------------------------
## Method `R6Map$addLayers`
## ------------------------------------------------

\dontrun{
library(rgee)

ee_Initialize()

nc <- st_read(system.file("shape/nc.shp", package = "sf")) \%>\%
  st_transform(4326) \%>\%
  sf_as_ee()

ee_s2 <- ee$ImageCollection("COPERNICUS/S2")$
  filterDate("2016-01-01", "2016-01-31")$
  filterBounds(nc) \%>\%
  ee_get(0:4)
Map$centerObject(nc$geometry())

m5 <- Map$addLayers(ee_s2, legend = TRUE)
m5

# digging up the metadata
m5$rgee$tokens
}
Getter method to obtain right container map
Getter method to obtain left container map
Setter method (latitude)
Setter method (longitude)
Setter method (zoom)
Setter method (previous_map_right)
Setter method (previous_map_left)
Predict the latitude, longitude and zoom of a specific Earth Engine Object
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{lon}}{The longitude of the center, in degrees.}

\item{\code{lat}}{The latitude of the center, in degrees.}

\item{\code{zoom}}{The zoom level, from 1 to 24.}

\item{\code{save_maps}}{Should \code{R6Map} save the previous maps?.}

\item{\code{previous_map_left}}{Should \code{R6Map} save the previous maps?.}

\item{\code{previous_map_right}}{Should \code{R6Map} save the previous maps?.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{R6Map$new()}}
\item \href{#method-print}{\code{R6Map$print()}}
\item \href{#method-setCenter}{\code{R6Map$setCenter()}}
\item \href{#method-setZoom}{\code{R6Map$setZoom()}}
\item \href{#method-centerObject}{\code{R6Map$centerObject()}}
\item \href{#method-addLayer}{\code{R6Map$addLayer()}}
\item \href{#method-addLayers}{\code{R6Map$addLayers()}}
\item \href{#method-clone}{\code{R6Map$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Constructor of R6Map.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{R6Map$new(lon = -76.942478, lat = -12.172116, zoom = 18, save_maps = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{lon}}{The longitude of the center, in degrees. By default -76.942478.}

\item{\code{lat}}{The latitude of the center, in degrees. By default -12.172116.}

\item{\code{zoom}}{The zoom level, from 1 to 24. By default 18.}

\item{\code{save_maps}}{Should \code{R6Map} save the previous maps?.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{EarthEngineMap} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Display a default map.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{R6Map$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A \code{EarthEngineMap} object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{library(rgee)
Map
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setCenter"></a>}}
\if{latex}{\out{\hypertarget{method-setCenter}{}}}
\subsection{Method \code{setCenter()}}{
Centers the map view at the given coordinates with the given zoom level. If
no zoom level is provided, it uses 10 by default.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{R6Map$setCenter(lon = 0, lat = 0, zoom = 10)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{lon}}{The longitude of the center, in degrees. By default -76.942478.}

\item{\code{lat}}{The latitude of the center, in degrees. By default -12.172116.}

\item{\code{zoom}}{The zoom level, from 1 to 24. By default 18.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
No return value, called to set initial coordinates and zoom.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{library(rgee)
Map$setCenter(lon = -76, lat = 0, zoom = 6)
Map
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setZoom"></a>}}
\if{latex}{\out{\hypertarget{method-setZoom}{}}}
\subsection{Method \code{setZoom()}}{
Sets the zoom level of the map.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{R6Map$setZoom(zoom = 10)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{zoom}}{The zoom level, from 1 to 24. By default 10.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
No return value, called to set zoom.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{library(rgee)
Map$setZoom(zoom = 3)
Map
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-centerObject"></a>}}
\if{latex}{\out{\hypertarget{method-centerObject}{}}}
\subsection{Method \code{centerObject()}}{
Centers the map view on a given object. If no zoom level is provided, it
will be predicted according to the bounds of the Earth Engine object
specified.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{R6Map$centerObject(eeObject, zoom = NULL, maxError = ee$ErrorMargin(1))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eeObject}}{Earth Engine spatial object.}

\item{\code{zoom}}{The zoom level, from 1 to 24. By default NULL.}

\item{\code{maxError}}{Max error when input image must be reprojected to an
explicitly requested result projection or geodesic state.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
No return value, called to set zoom.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(rgee)
ee_Initialize()
image <- ee$Image("LANDSAT/LC08/C01/T1/LC08_044034_20140318")
Map$centerObject(image)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-addLayer"></a>}}
\if{latex}{\out{\hypertarget{method-addLayer}{}}}
\subsection{Method \code{addLayer()}}{
Adds a given Eath Engine spatial object to the map as a layer
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{R6Map$addLayer(
  eeObject,
  visParams = NULL,
  name = NULL,
  shown = TRUE,
  opacity = 1,
  position = NULL,
  legend = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eeObject}}{The Earth Engine spatial object to display in the interactive map.}

\item{\code{visParams}}{List of parameters for visualization. See details.}

\item{\code{name}}{The name of layers.}

\item{\code{shown}}{A flag indicating whether layers should be on by default.}

\item{\code{opacity}}{The layer's opacity represented as a number between 0 and 1. Defaults to 1.}

\item{\code{legend}}{Should a legend be plotted?. Only the legend of the first image is displayed.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{EarthEngineMap} object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(rgee)
ee_Initialize()
image <- ee$Image("LANDSAT/LC08/C01/T1/LC08_044034_20140318")
Map$centerObject(image)
Map$addLayer(image)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-addLayers"></a>}}
\if{latex}{\out{\hypertarget{method-addLayers}{}}}
\subsection{Method \code{addLayers()}}{
Adds a given ee$ImageCollection to the map as multiple layers.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{R6Map$addLayers(
  eeObject,
  visParams = NULL,
  nmax = 5,
  name = NULL,
  shown = TRUE,
  position = NULL,
  opacity = 1,
  legend = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eeObject}}{ee$ImageCollection to display in the interactive map.}

\item{\code{visParams}}{List of parameters for visualization. See details.}

\item{\code{nmax}}{Numeric. The maximum number of images to display. By default 5.}

\item{\code{name}}{The name of layers.}

\item{\code{shown}}{A flag indicating whether layers should be on by default.}

\item{\code{opacity}}{The layer's opacity represented as a number between 0 and 1. Defaults to 1.}

\item{\code{legend}}{Should a legend be plotted?. Only the legend of the first image is displayed.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{EarthEngineMap} object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(rgee)

ee_Initialize()

nc <- st_read(system.file("shape/nc.shp", package = "sf")) \%>\%
  st_transform(4326) \%>\%
  sf_as_ee()

ee_s2 <- ee$ImageCollection("COPERNICUS/S2")$
  filterDate("2016-01-01", "2016-01-31")$
  filterBounds(nc) \%>\%
  ee_get(0:4)
Map$centerObject(nc$geometry())

m5 <- Map$addLayers(ee_s2, legend = TRUE)
m5

# digging up the metadata
m5$rgee$tokens
}
Getter method to obtain right container map
Getter method to obtain left container map
Setter method (latitude)
Setter method (longitude)
Setter method (zoom)
Setter method (previous_map_right)
Setter method (previous_map_left)
Predict the latitude, longitude and zoom of a specific Earth Engine Object
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{R6Map$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
